$date
  Sat Oct 07 16:38:00 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 1 ! control $end
$var reg 4 " a[3:0] $end
$var reg 4 # b[3:0] $end
$var reg 1 $ carry_out $end
$var reg 4 % sum_diff[3:0] $end
$scope module dut $end
$var reg 1 & control $end
$var reg 4 ' a[3:0] $end
$var reg 4 ( b[3:0] $end
$var reg 1 ) carry_out $end
$var reg 4 * sum_diff[3:0] $end
$var reg 1 + add_carry $end
$var reg 1 , sub_carry $end
$var reg 4 - sum[3:0] $end
$var reg 4 . diff[3:0] $end
$var reg 4 / b_flipped[3:0] $end
$scope module add $end
$var reg 1 0 carry_in $end
$var reg 4 1 a[3:0] $end
$var reg 4 2 b[3:0] $end
$var reg 1 3 carry_out $end
$var reg 4 4 sum[3:0] $end
$var reg 1 5 carry_through $end
$scope module first_two_bits $end
$var reg 1 6 carry_in $end
$var reg 2 7 a[1:0] $end
$var reg 2 8 b[1:0] $end
$var reg 1 9 carry_out $end
$var reg 2 : sum[1:0] $end
$var reg 1 ; carry_through $end
$scope module lsb $end
$var reg 1 < carry_in $end
$var reg 1 = i1 $end
$var reg 1 > i0 $end
$var reg 1 ? carry_out $end
$var reg 1 @ sum $end
$var reg 1 A p0 $end
$var reg 1 B p1 $end
$var reg 1 C p2 $end
$scope module half_adder_xin_yin $end
$var reg 1 D i1 $end
$var reg 1 E i0 $end
$var reg 1 F sum $end
$var reg 1 G carry $end
$upscope $end
$scope module half_adder_cin_sout $end
$var reg 1 H i1 $end
$var reg 1 I i0 $end
$var reg 1 J sum $end
$var reg 1 K carry $end
$upscope $end
$upscope $end
$scope module msb $end
$var reg 1 L carry_in $end
$var reg 1 M i1 $end
$var reg 1 N i0 $end
$var reg 1 O carry_out $end
$var reg 1 P sum $end
$var reg 1 Q p0 $end
$var reg 1 R p1 $end
$var reg 1 S p2 $end
$scope module half_adder_xin_yin $end
$var reg 1 T i1 $end
$var reg 1 U i0 $end
$var reg 1 V sum $end
$var reg 1 W carry $end
$upscope $end
$scope module half_adder_cin_sout $end
$var reg 1 X i1 $end
$var reg 1 Y i0 $end
$var reg 1 Z sum $end
$var reg 1 [ carry $end
$upscope $end
$upscope $end
$upscope $end
$scope module last_two_bits $end
$var reg 1 \ carry_in $end
$var reg 2 ] a[1:0] $end
$var reg 2 ^ b[1:0] $end
$var reg 1 _ carry_out $end
$var reg 2 ` sum[1:0] $end
$var reg 1 a carry_through $end
$scope module lsb $end
$var reg 1 b carry_in $end
$var reg 1 c i1 $end
$var reg 1 d i0 $end
$var reg 1 e carry_out $end
$var reg 1 f sum $end
$var reg 1 g p0 $end
$var reg 1 h p1 $end
$var reg 1 i p2 $end
$scope module half_adder_xin_yin $end
$var reg 1 j i1 $end
$var reg 1 k i0 $end
$var reg 1 l sum $end
$var reg 1 m carry $end
$upscope $end
$scope module half_adder_cin_sout $end
$var reg 1 n i1 $end
$var reg 1 o i0 $end
$var reg 1 p sum $end
$var reg 1 q carry $end
$upscope $end
$upscope $end
$scope module msb $end
$var reg 1 r carry_in $end
$var reg 1 s i1 $end
$var reg 1 t i0 $end
$var reg 1 u carry_out $end
$var reg 1 v sum $end
$var reg 1 w p0 $end
$var reg 1 x p1 $end
$var reg 1 y p2 $end
$scope module half_adder_xin_yin $end
$var reg 1 z i1 $end
$var reg 1 { i0 $end
$var reg 1 | sum $end
$var reg 1 } carry $end
$upscope $end
$scope module half_adder_cin_sout $end
$var reg 1 !" i1 $end
$var reg 1 "" i0 $end
$var reg 1 #" sum $end
$var reg 1 $" carry $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module subtract $end
$var reg 1 %" carry_in $end
$var reg 4 &" a[3:0] $end
$var reg 4 '" b[3:0] $end
$var reg 1 (" carry_out $end
$var reg 4 )" sum[3:0] $end
$var reg 1 *" carry_through $end
$scope module first_two_bits $end
$var reg 1 +" carry_in $end
$var reg 2 ," a[1:0] $end
$var reg 2 -" b[1:0] $end
$var reg 1 ." carry_out $end
$var reg 2 /" sum[1:0] $end
$var reg 1 0" carry_through $end
$scope module lsb $end
$var reg 1 1" carry_in $end
$var reg 1 2" i1 $end
$var reg 1 3" i0 $end
$var reg 1 4" carry_out $end
$var reg 1 5" sum $end
$var reg 1 6" p0 $end
$var reg 1 7" p1 $end
$var reg 1 8" p2 $end
$scope module half_adder_xin_yin $end
$var reg 1 9" i1 $end
$var reg 1 :" i0 $end
$var reg 1 ;" sum $end
$var reg 1 <" carry $end
$upscope $end
$scope module half_adder_cin_sout $end
$var reg 1 =" i1 $end
$var reg 1 >" i0 $end
$var reg 1 ?" sum $end
$var reg 1 @" carry $end
$upscope $end
$upscope $end
$scope module msb $end
$var reg 1 A" carry_in $end
$var reg 1 B" i1 $end
$var reg 1 C" i0 $end
$var reg 1 D" carry_out $end
$var reg 1 E" sum $end
$var reg 1 F" p0 $end
$var reg 1 G" p1 $end
$var reg 1 H" p2 $end
$scope module half_adder_xin_yin $end
$var reg 1 I" i1 $end
$var reg 1 J" i0 $end
$var reg 1 K" sum $end
$var reg 1 L" carry $end
$upscope $end
$scope module half_adder_cin_sout $end
$var reg 1 M" i1 $end
$var reg 1 N" i0 $end
$var reg 1 O" sum $end
$var reg 1 P" carry $end
$upscope $end
$upscope $end
$upscope $end
$scope module last_two_bits $end
$var reg 1 Q" carry_in $end
$var reg 2 R" a[1:0] $end
$var reg 2 S" b[1:0] $end
$var reg 1 T" carry_out $end
$var reg 2 U" sum[1:0] $end
$var reg 1 V" carry_through $end
$scope module lsb $end
$var reg 1 W" carry_in $end
$var reg 1 X" i1 $end
$var reg 1 Y" i0 $end
$var reg 1 Z" carry_out $end
$var reg 1 [" sum $end
$var reg 1 \" p0 $end
$var reg 1 ]" p1 $end
$var reg 1 ^" p2 $end
$scope module half_adder_xin_yin $end
$var reg 1 _" i1 $end
$var reg 1 `" i0 $end
$var reg 1 a" sum $end
$var reg 1 b" carry $end
$upscope $end
$scope module half_adder_cin_sout $end
$var reg 1 c" i1 $end
$var reg 1 d" i0 $end
$var reg 1 e" sum $end
$var reg 1 f" carry $end
$upscope $end
$upscope $end
$scope module msb $end
$var reg 1 g" carry_in $end
$var reg 1 h" i1 $end
$var reg 1 i" i0 $end
$var reg 1 j" carry_out $end
$var reg 1 k" sum $end
$var reg 1 l" p0 $end
$var reg 1 m" p1 $end
$var reg 1 n" p2 $end
$scope module half_adder_xin_yin $end
$var reg 1 o" i1 $end
$var reg 1 p" i0 $end
$var reg 1 q" sum $end
$var reg 1 r" carry $end
$upscope $end
$scope module half_adder_cin_sout $end
$var reg 1 s" i1 $end
$var reg 1 t" i0 $end
$var reg 1 u" sum $end
$var reg 1 v" carry $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
b0100 "
b0100 #
0$
b1000 %
0&
b0100 '
b0100 (
0)
b1000 *
0+
0,
b1000 -
b1111 .
b1011 /
00
b0100 1
b0100 2
03
b1000 4
05
06
b00 7
b00 8
09
b00 :
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
b01 ]
b01 ^
0_
b10 `
1a
0b
1c
1d
1e
0f
0g
1h
0i
1j
1k
0l
1m
0n
0o
0p
0q
1r
0s
0t
0u
1v
0w
0x
0y
0z
0{
0|
0}
1!"
0""
1#"
0$"
0%"
b0100 &"
b1011 '"
0("
b1111 )"
0*"
0+"
b00 ,"
b11 -"
0."
b11 /"
00"
01"
02"
13"
04"
15"
16"
07"
08"
09"
1:"
1;"
0<"
0="
1>"
1?"
0@"
0A"
0B"
1C"
0D"
1E"
1F"
0G"
0H"
0I"
1J"
1K"
0L"
0M"
1N"
1O"
0P"
0Q"
b01 R"
b10 S"
0T"
b11 U"
0V"
0W"
1X"
0Y"
0Z"
1["
1\"
0]"
0^"
1_"
0`"
1a"
0b"
0c"
1d"
1e"
0f"
0g"
0h"
1i"
0j"
1k"
1l"
0m"
0n"
0o"
1p"
1q"
0r"
0s"
1t"
1u"
0v"
#1000000
b1100 "
b1011 #
1$
b0111 %
b1100 '
b1011 (
1)
b0111 *
1+
1,
b0111 -
b0000 .
b0100 /
b1100 1
b1011 2
13
b0111 4
b11 8
b11 :
1>
1@
1A
1E
1F
1I
1J
1N
1P
1Q
1U
1V
1Y
1Z
b11 ]
b10 ^
1_
b01 `
0a
0d
0e
1f
1g
0h
0k
1l
0m
1o
1p
0r
1s
1t
1u
0v
1x
1z
1{
1}
0!"
0#"
b1100 &"
b0100 '"
1("
b0000 )"
b00 -"
b00 /"
03"
05"
06"
0:"
0;"
0>"
0?"
0C"
0E"
0F"
0J"
0K"
0N"
0O"
b11 R"
b01 S"
1T"
b00 U"
1V"
1Y"
1Z"
0["
0\"
1]"
1`"
0a"
1b"
0d"
0e"
1g"
1h"
0i"
1j"
0k"
1l"
0m"
1n"
1o"
0p"
1q"
0r"
1s"
1t"
0u"
1v"
#2000000
b0111 "
b1000 #
0$
b1111 %
b0111 '
b1000 (
0)
b1111 *
0+
0,
b1111 -
b1110 .
b0111 /
b0111 1
b1000 2
03
b1111 4
b11 7
b00 8
1=
0>
1D
0E
1M
0N
1T
0U
b01 ]
0_
b11 `
0s
0u
1v
1w
0x
0z
1|
0}
1""
1#"
b0111 &"
b0111 '"
0("
b1110 )"
1*"
b11 ,"
b11 -"
1."
b10 /"
10"
12"
13"
14"
05"
06"
17"
19"
1:"
0;"
1<"
0>"
0?"
1A"
1B"
1C"
1D"
1E"
0F"
1G"
1I"
1J"
0K"
1L"
1M"
0N"
1O"
1Q"
b01 R"
0T"
b11 U"
1W"
1["
1c"
1e"
0h"
0j"
1k"
0l"
0n"
0o"
0q"
0t"
1u"
0v"
#3000000
1!
b0101 "
b1010 #
b1011 %
1&
b0101 '
b1010 (
b1011 *
1+
b0000 -
b1011 .
b0101 /
10
b0101 1
b1010 2
13
b0000 4
15
16
b01 7
b10 8
19
b00 :
1;
1<
1?
0@
1C
1H
0J
1K
1L
0M
1N
1O
0P
1S
0T
1U
1X
0Z
1[
1\
1_
b00 `
1a
1b
1e
0f
1i
1n
0p
1q
1r
1u
0v
1y
1!"
0#"
1$"
1%"
b0101 &"
b0101 '"
b1011 )"
0*"
1+"
b01 ,"
b01 -"
0."
b11 /"
11"
15"
1="
1?"
0B"
0C"
0D"
1E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0N"
1O"
0P"
0Q"
b10 U"
0W"
0["
0c"
0e"
#4000000
b1111 "
b0111 #
1$
b1000 %
b1111 '
b0111 (
1)
b1000 *
1,
b0111 -
b1000 .
b1000 /
b1111 1
b0111 2
b0111 4
b11 7
b11 8
b11 :
1>
1@
0A
1B
0C
1E
0F
1G
0I
1J
0K
1M
1P
0Q
1R
0S
1T
0V
1W
0Y
1Z
0[
b11 ]
b01 ^
b01 `
1d
1f
0g
1h
0i
1k
0l
1m
0o
1p
0q
1s
0t
1z
0{
b1111 &"
b1000 '"
1("
b1000 )"
1*"
b11 ,"
b00 -"
1."
b00 /"
10"
03"
14"
05"
16"
07"
18"
0:"
1;"
0<"
1>"
0?"
1@"
1A"
1B"
1D"
0E"
1F"
1H"
1I"
1K"
1M"
1N"
0O"
1P"
1Q"
b11 R"
b10 S"
1T"
b10 U"
1V"
1W"
0Y"
1Z"
0["
1\"
0]"
1^"
0`"
1a"
0b"
1c"
1d"
0e"
1f"
1g"
1h"
1i"
1j"
1k"
0l"
1m"
0n"
1o"
1p"
0q"
1r"
1s"
0t"
1u"
0v"
#5000000
b0000 "
b0001 #
0$
b1111 %
b0000 '
b0001 (
0)
b1111 *
0+
0,
b0010 -
b1111 .
b1110 /
b0000 1
b0001 2
03
b0010 4
05
b00 7
b01 8
09
b10 :
1;
0=
1?
0@
1A
0B
1C
0D
1F
0G
1I
0J
1K
1L
0M
0N
0O
1P
0R
0T
0U
0W
1X
1Z
0\
b00 ]
b00 ^
0_
b00 `
0a
0b
0c
0d
0e
0f
0h
0j
0k
0m
0n
0p
0r
0s
0u
0v
0w
0y
0z
0|
0!"
0""
0#"
0$"
b0000 &"
b1110 '"
0("
b1111 )"
0*"
b00 ,"
b10 -"
0."
b11 /"
00"
02"
04"
15"
06"
08"
09"
0;"
0>"
1?"
0@"
0A"
0B"
1C"
0D"
1E"
1F"
0H"
0I"
1J"
1K"
0M"
1N"
1O"
0P"
0Q"
b00 R"
b11 S"
0T"
b11 U"
0V"
0W"
0X"
1Y"
0Z"
1["
1\"
0^"
0_"
1`"
1a"
0c"
1d"
1e"
0f"
0g"
0h"
0j"
1k"
1l"
0m"
0n"
0o"
1q"
0r"
0s"
1t"
1u"
0v"
#6000000
b1111 "
b1111 #
1$
b0000 %
b1111 '
b1111 (
1)
b0000 *
1+
1,
b1111 -
b0000 .
b0000 /
b1111 1
b1111 2
13
b1111 4
15
b11 7
b11 8
19
b11 :
1=
1@
0A
1B
0C
1D
0F
1G
0I
1J
0K
1M
1N
1O
1R
1T
1U
1W
1\
b11 ]
b11 ^
1_
b11 `
1a
1b
1c
1d
1e
1f
1h
1j
1k
1m
1n
1p
1r
1s
1t
1u
1v
1x
1z
1{
1}
1!"
1#"
b1111 &"
b0000 '"
1("
b0000 )"
1*"
b11 ,"
b00 -"
1."
b00 /"
10"
12"
14"
05"
16"
18"
19"
1;"
1>"
0?"
1@"
1A"
1B"
0C"
1D"
0E"
1F"
0G"
1H"
1I"
0J"
1K"
0L"
1M"
1N"
0O"
1P"
1Q"
b11 R"
b00 S"
1T"
b00 U"
1V"
1W"
1X"
0Y"
1Z"
0["
1\"
0]"
1^"
1_"
0`"
1a"
0b"
1c"
1d"
0e"
1f"
1g"
1h"
0i"
1j"
0k"
1l"
0m"
1n"
1o"
0p"
1q"
0r"
1s"
1t"
0u"
1v"
#7000000
